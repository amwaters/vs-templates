<#+

//////// NEEDS UPDATING
public static class Gist
{
	public static void WriteFile(
		Microsoft.VisualStudio.TextTemplating.TextTransformation tt,
		string USER, string GIST, string CMIT, string FILE)
	{
		tt.Write(DownloadString(tt, USER, GIST, CMIT, FILE));
	}

	public static string DownloadString(
		Microsoft.VisualStudio.TextTemplating.TextTransformation tt,
		string USER, string GIST, string CMIT, string FILE)
	{
		var source = string.Format(@"https://gist.github.com/{0}/{1}/raw/{2}/{3}", USER, GIST, CMIT, FILE);

		var s = "// File '" + FILE + "' downloaded from Gist at " + System.DateTime.Now.ToString()
			+ "\n// USER: " + USER
			+ "\n// GIST: " + GIST 
			+ "\n// CMIT: " + CMIT
			+ "\n// URL: " + source
			+ "\n\n";

		using (var client = new System.Net.WebClient())
			s += client.DownloadString(source);
		
		return s;
	}
}

public static class Git
{
	public static void DownloadFile(
		Microsoft.VisualStudio.TextTemplating.TextTransformation tt,
		string USER, string PROJECT, string CMIT, string FILE, 
		string COMMENT_START = "//", string COMMENT_END = "")
	{
		tt.Write(DownloadString(tt, USER, PROJECT, CMIT, FILE, COMMENT_START, COMMENT_END));
	}

	public static string DownloadString(
		Microsoft.VisualStudio.TextTemplating.TextTransformation tt,
		string USER, string PROJECT, string CMIT, string FILE,
		string COMMENT_START = "//", string COMMENT_END = "")
	{
		var source = string.Format($"https://raw.githubusercontent.com/{USER}/{PROJECT}/{CMIT}/{FILE}");

		var s = $"{COMMENT_START} File '{FILE}' downloaded from GitHub at {System.DateTime.Now.ToString()} {COMMENT_END}"
			+ $"\n{COMMENT_START} Project: '{USER}/{PROJECT}' Commit: '{CMIT}' {COMMENT_END}"
			+ $"\n{COMMENT_START} URL: {source} {COMMENT_END}"
			+ "\n\n";

		using (var client = new System.Net.WebClient())
			s += client.DownloadString(source);
		
		return s;
	}
}

//////// NEEDS UPDATING
public static class File
{
	public static void Copy(
		Microsoft.VisualStudio.TextTemplating.TextTransformation tt,
		Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost host,
		string PATH)
	{
		var file = new System.IO.FileInfo(host.ResolvePath(PATH));

		tt.Write("// File '" + file.Name
			+ "' copied at " + System.DateTime.Now.ToString()
			+ "\r\n// PATH: " + PATH
			+ "\r\n\r\n");

		tt.Write(System.IO.File.ReadAllText(file.FullName));
	}
}

#>